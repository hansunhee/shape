OOP의 특징
1.상속
: 객체지향의 가장 기본적인 속성으로 특정 객체를 다른 객체에서 상속을 받아 사용할 수 있는것을 의미한다.
  코드를 간결하게 하고 코드의 재사용성을 높일 수 있다.
  클래스를 설계할 때 공통적으로 필요한 성격(메서드, 변수)들을 기본적인 클래스에 정의해 두면
  다른 클래스를 작성할 때 공통적인 내용은 담은 클래스에서 상속 받아 사용할 수 있다.
  상속(Inheritance)이란 이미 존재하는 클래스로부터 멤버들을 물려받는 것이다. 
  상속되는 클래스를 부모 클래스라하며 슈퍼클래스(Super class)라고도 한다.
  자식 클래스는 서브클래스(Sub class)라고도 하며 상속을 받는 클래스를 의미한다.
  자바에서 클래스를 상속 받기위해서는 클래스 정의후에 옆에 extends를 적고 상속받을 클래스 이름을 쓰면된다.

 ------example1.

2.캡슐화(데이터은닉)
: 자바의 객체 내부가 어떤 형태로 구성되어 있는지 모르고 어떤 메서드를 사용하면 어떠한 결과를 얻을수 
  있다는 개념으로 프로그래밍 한다.
  즉, 구체적인 내용은 몰라도 원하는 결과를 얻을 수 있기에 코딩하는데 있어서 보다 수월하다.
  객체 외부에서 데이터를 직접 건들면 데이터가 변환될 수 있기 때문에 변환을 막기 위해 데이터 은닉 이라는 개념이 존재한다.
  캡슐화와 데이터 은닉은 클래스의 접근 권한을 결정하는 접근 지정자(public, default, protected, private)를 사용하여 구현한다.

 ------example2.

3.다형성
: 추상화와 더불어 가장 중요한 개념이다. 서로 다른 객체가 동일한 메세지에 대하여 서로 다른 방법으로
  응답할 수 있는 기능이다. '서로 다른 객체'란 서로 다른 클래스를 의미한다.  
  다형성은 이름이 동일한 메소드가 어떠한 자료와 사용되는지에 따라 다르게 동작하는 것을 의미한다.
  자바에서는 메소드의 이름으로 전달 인자의 자료형이나 개수를 서로 다르게 주어 같은 메소드 이름으로
  여러번 정의할 수 있다. 이렇게 동일한 이름의 메소드를 여러번 정의하는 것을 메소드의 오버로딩이라 한다.
  

3-1.오버로딩
: 같은 이름의 함수를 여러 개 정의하고, 매개변수의 유형과 개수를 다르게 하여 다양한 유형의 호출에 응답하게 한다.
 
 ------example4.

3-2.오버라이딩
: 위 클래스가 가지고 있는 멤버변수가 하위 클래스로 상속되는 것처럼 상위 클래스가 가지고 있는 메소드도 하위 클래스로 
  상속되어 하위 클래스에서 사용할 수 있다. 하지만, 하위 클래스에서 메소드를 재정의해서 사용할 수 있다.
 
 ------example3.
 
 ** 그 외의 내용은 ShapeTest를 참고해주세요.